@import '../../styles/themes/talentPortal/tokens';

$btn-padding-y: 1.2rem !default;
$btn-padding-x: 2rem !default;
$btn-padding-y-lg: 1.2rem !default;
$btn-padding-x-lg: 2.8rem !default;
$btn-padding-y-sm: 0.56rem !default;
$btn-padding-x-sm: 1.6rem !default;

$btn-line-height-base: 1.125 !default;
$btn-line-height-sm: 1.5 !default;
$btn-line-height-lg: 1.5 !default;

$btn-pill-border-radius: 50px !default;

$btn-font-weight: $font-weight-regular !default;
$btn-font-size: 1.4rem !default;
$btn-font-size-sm: 1.2rem !default;
$btn-font-size-lg: 1.8rem !default;
$btn-font-family: $featured-font !default;

$btn-box-shadow: none !default;
$btn-active-box-shadow: inset 0 3px 5px rgba($black, 0.125) !default;

$btn-link-disabled-color: $gray-600 !default;
$btn-block-spacing-y: 0.8rem !default;

$btn-border-radius: $border-radius !default;
$btn-border-radius-lg: $border-radius-lg !default;
$btn-border-radius-sm: $border-radius-sm !default;

$btn-border-width: 1px !default;

$btn-transition: $transition-base !default;

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}

@keyframes :global(spin) {
  to {
    transform: rotate(360deg);
  }
}

// Loading spinner
@mixin spinner($track: #777, $bar: #fff) {
  &:after {
    content: '';
    box-sizing: border-box;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin-top: -10px;
    margin-left: -10px;
    border-radius: 50%;
    border: 2px solid $track;
    border-top-color: $bar;

    :global {
      animation: spin 0.6s linear infinite;
    }
  }
}

// Button variants
@mixin button-variant(
  $background,
  $border: $background,
  $hover-background: darken($background, 5%),
  $hover-border: $hover-background,
  $hover-box-shadow: 0 4px 10px rgba($background, 0.25),
  $active-background: darken($background, 5%),
  $active-border: darken($border, 10%),
  $active-box-shadow: inset 0 3px 5px rgba($black, 0.125)
) {
  color: color-yiq($background);
  border-color: $border;
  background-color: $background;
  box-shadow: $btn-box-shadow;

  &[class*='dropdown-toggle-split'] {
    background-color: darken($background, 7);
  }

  @include hover-not-disabled {
    color: color-yiq($hover-background);
    background-color: $background;
    border-color: $hover-border;
    @if $enable-shadows {
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05), $hover-box-shadow;
    }
  }

  &:focus,
  &.focus {
    @if $enable-shadows {
      box-shadow: 0 0 0 3px rgba($background, 0.15), 0 3px 15px rgba($background, 0.2),
        0 2px 5px rgba($black, 0.1);
    } @else {
      box-shadow: 0 0 0 3px rgba($background, 0.5);
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;
    background-image: none;
    box-shadow: $active-box-shadow !important;
  }

  &.loading {
    color: darken($background, 15);
    background: darken($background, 10);
    border-color: darken($background, 10);

    @include spinner(lighten($background, 20), #fff);
  }
}

@mixin button-outline-variant(
  $color,
  $color-hover: color-yiq($color),
  $active-background: $color,
  $active-border: $color
) {
  $button-text-color: $color; // Fix light or white outlined buttons

  @if ($color==theme-color('light') or $color==$white) {
    $button-text-color: color-yiq($color);
  }

  background-color: transparent;
  background-image: none;
  border-color: $color;
  color: $button-text-color;

  @include hover {
    color: color-yiq($color);
    background-color: $active-background;
    border-color: $active-border;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05), 0 4px 10px rgba($color, 0.25);
  }

  &:focus,
  &.focus {
    @if $enable-shadows {
      box-shadow: 0 0 0 3px rgba($color, 0.15), 0 3px 15px rgba($color, 0.2),
        0 2px 5px rgba($black, 0.1) !important;
    } @else {
      box-shadow: 0 0 0 3px rgba($color, 0.5) !important;
    }
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
    box-shadow: none;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;
    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows {
        box-shadow: inset 0 3px 5px rgba($black, 0.125) !important;
      } @else {
        box-shadow: none !important;
      }
    }
  }

  &.loading {
    color: rgba(0, 0, 0, 0.04);
    @include spinner(rgba(0, 0, 0, 0.15), lighten($color, 10));
  }
}

//
// Base styles
//

.btn {
  font-weight: $btn-font-weight;
  font-family: $btn-font-family;
  border: $border-width solid transparent;
  display: inline-block;

  @include button-size(
    $btn-padding-y,
    $btn-padding-x,
    $btn-font-size,
    $btn-line-height-base,
    $btn-border-radius
  );

  @include transition($btn-transition);

  @include hover {
    cursor: pointer;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: none;
  }

  &:not([disabled]):not(.disabled):active,
  &:not([disabled]):not(.disabled).active {
    background-image: none;
    box-shadow: none;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    box-shadow: none;
    cursor: not-allowed;

    &:not(.loading) {
      opacity: 0.5;
    }
  }

  &.loading {
    position: relative;
  }

  &.btn-squared {
    border-radius: 0;
  }

  &.btn-pill {
    border-radius: $btn-pill-border-radius;
  }
}

//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value);
  }
}

// White buttons
.btn-white {
  @include button-variant($white);
}

// Black buttons
.btn-black {
  @include button-variant($black);
}

// Outlined default buttons
@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}

// White outline buttons
.btn-outline-white {
  @include button-outline-variant($white);
  color: $white;

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    color: $black;
  }
}

// Black outline buttons
.btn-outline-black {
  @include button-outline-variant($black);
  color: $black;

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    color: $white;
  }
}

//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-light;
  color: $link-color;

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
  }

  &:disabled {
    color: $btn-link-disabled-color;
  }
}

//
// Button Sizes
//

.btn-lg {
  @include button-size(
    $btn-padding-y-lg,
    $btn-padding-x-lg,
    $btn-font-size-lg,
    $btn-line-height-lg,
    $btn-border-radius-lg
  );
}

.btn-sm {
  @include button-size(
    $btn-padding-y-sm,
    $btn-padding-x-sm,
    $btn-font-size-sm,
    $btn-line-height-sm,
    $btn-border-radius-sm
  );
}

//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}
