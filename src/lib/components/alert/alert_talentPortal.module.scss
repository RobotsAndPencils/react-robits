@import '../../styles/themes/talentPortal/tokens';

$alert-padding-y: 1.4rem !default;
$alert-padding-x: 2rem !default;
$alert-margin-bottom: 1.6rem !default;
$alert-link-font-weight: $font-weight-bold !default;
$alert-border-width: $border-width !default;
$alert-bg-level: -10 !default;
$alert-border-level: -9 !default;
$alert-color-level: 6 !default;
$alert-border-radius: 0 !default;
$close-font-size: $font-size-base * 1.5 !default;

@mixin alert-variant($background, $border, $color) {
  color: $color;
  @include gradient-bg($background);
  border-color: $border;

  hr {
    border-top-color: darken($border, 5%);
  }

  .alert-link {
    color: darken($color, 10%);
  }
}

.centered {
  text-align: center;
}

.alert {
  position: relative;
  border-radius: $alert-border-radius;
  padding: $alert-padding-y $alert-padding-x;
  margin-bottom: $alert-margin-bottom;
  border: none;
}

// Headings for larger alerts
.alert-heading {
  // Specified to prevent conflicts of changing $headings-color
  color: inherit;
}

// Provide class for links that match alerts
.alert-link {
  font-weight: $alert-link-font-weight;
}

// Dismissible alerts
//
// Expand the right padding and account for the close button's positioning.

.alert-dismissible {
  padding-right: ($close-font-size + $alert-padding-x * 2);

  // Adjust close link position
  .close {
    font-size: 2.4rem;
    font-weight: 500;
    text-shadow: none;
    background-color: transparent;
    border: 0;
    appearance: none;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    padding: 0 $alert-padding-x;
    color: inherit;
    @include transition($transition-base);
    opacity: 0.5;
    display: flex;
    align-items: center;
    outline: 0;

    span {
      margin-top: -3px;
    }

    &:hover {
      cursor: pointer;
    }
  }
}

// Alternate styles
//
// Generate contextual modifier classes for colorizing the alert.

@each $color, $value in $theme-colors {
  .alert-#{$color} {
    @include alert-variant(
      theme-color-level($color, $alert-bg-level),
      theme-color-level($color, $alert-border-level),
      theme-color-level($color, $alert-color-level)
    );

    color: lighten($value, 48%);
    background-color: $value;

    .alert-link {
      color: lighten($value, 48%);
    }

    // Exception for alerts with a light background.
    @if $color == 'light' {
      color: color-yiq($value);

      .alert-link {
        color: color-yiq($value);
      }
    }
  }
}
