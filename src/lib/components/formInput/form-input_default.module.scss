@import '../../styles/themes/default/tokens';

$input-group-padding-y: 12px !default;
$input-group-padding-x: 14px !default;
$input-group-addon-bg: lighten($form-control-border-color, 19%) !default;
$input-group-addon-border-color: $form-control-border-color !default;
$input-group-addon-color: $input-group-addon-border-color !default;

// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.input-group {
  position: relative;
  display: flex;
  flex-wrap: wrap; // For form validation feedback
  align-items: stretch;
  width: 100%;

  :global(.form-control),
  select,
  > .custom-file {
    position: relative; // For focus state's z-index
    flex: 1 1 auto;
    // Add width 1% and flex-basis auto to ensure that button will not wrap out
    // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
    width: 1%;
    margin-bottom: 0;

    + :global(.form-control),
    + select,
    + .custom-file {
      margin-left: -$form-control-border-width;
    }
  }

  // Bring the "active" form control to the top of surrounding elements
  :global(.form-control):focus,
  select:focus,
  > .custom-file .custom-file-input:focus ~ .custom-file-label {
    z-index: 3;
  }

  // Bring the custom file input above the label
  > .custom-file .custom-file-input:focus {
    z-index: 4;
  }

  > :global(.form-control),
  select {
    &:not(:last-child) {
      @include border-right-radius(0);
    }
    &:not(:first-child) {
      @include border-left-radius(0);
    }
  }

  // Custom file inputs have more complex markup, thus requiring different
  // border-radius overrides.
  > .custom-file {
    display: flex;
    align-items: center;

    &:not(:last-child) .custom-file-label,
    &:not(:last-child) .custom-file-label::after {
      @include border-right-radius(0);
    }
    &:not(:first-child) .custom-file-label,
    &:not(:first-child) .custom-file-label::after {
      @include border-left-radius(0);
    }
  }

  // Seamless input groups
  &.input-group-seamless {
    :global(.form-control) {
      border-radius: $form-control-border-radius;
    }

    > .input-group-leading,
    > .input-group-trailing {
      position: absolute;
      top: 0;
      bottom: 0;
      z-index: 4;

      .input-group-text {
        padding: $input-group-padding-y $input-group-padding-x;
        background: transparent;
        border: none;
      }
    }

    > .input-group-trailing {
      right: 0;
    }

    // > .input-group-middle {
    //   right: 0;
    //   left: 0;
    // }

    > .input-group-leading {
      left: 0;
    }

    > :global(.form-control),
    select {
      &:not(:last-child) {
        padding-right: 35px;
      }
      &:not(:first-child) {
        padding-left: 35px;
      }
    }
  }
}

// Prepend and append
//
// While it requires one extra layer of HTML for each, dedicated prepend and
// append elements allow us to 1) be less clever, 2) simplify our selectors, and
// 3) support HTML5 form validation.

.input-group-leading,
.input-group-trailing,
.input-group-prepend,
.input-group-append {
  display: flex;
  justify-content: center;
  min-width: 35px;

  // Ensure buttons are always above inputs for more visually pleasing borders.
  // This isn't needed for `.input-group-text` since it shares the same border-color
  // as our inputs.
  button {
    position: relative;
    z-index: 2;
  }

  button + button,
  button + .input-group-text,
  .input-group-text + .input-group-text,
  .input-group-text + button {
    margin-left: -$form-control-border-width;
  }
}

.input-group-prepend {
  margin-right: -$form-control-border-width;
}
.input-group-append {
  margin-left: -$form-control-border-width;
}

// Textual addons
//
// Serves as a catch-all element for any text or radio/checkbox input you wish
// to prepend or append to an input.

.input-group-text {
  display: flex;
  align-items: center;
  padding: $form-control-padding-y $form-control-padding-x;
  margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
  font-size: $font-size-base; // Match inputs
  font-weight: $font-weight-normal;
  color: $input-group-addon-color;
  text-align: center;
  white-space: nowrap;
  background-color: $input-group-addon-bg;
  border: $form-control-border-width solid $input-group-addon-border-color;
  border-radius: $form-control-border-radius;

  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type='radio'],
  input[type='checkbox'] {
    margin-top: 0;
  }
}

// Sizing
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.input-group-lg :global(.form-control),
.input-group-lg > .input-group-prepend > .input-group-text,
.input-group-lg > .input-group-append > .input-group-text,
.input-group-lg > .input-group-prepend > button,
.input-group-lg > .input-group-append > button {
  height: $form-control-height-lg;
  padding: $form-control-padding-y-lg $form-control-padding-x-lg;
  font-size: $font-size-lg;
  line-height: $form-control-line-height-lg;
  border-radius: $form-control-border-radius-lg;

  @extend :global(.form-control-lg) !optional;
}

.input-group-sm :global(.form-control),
.input-group-sm > .input-group-prepend > .input-group-text,
.input-group-sm > .input-group-append > .input-group-text,
.input-group-sm > .input-group-prepend > button,
.input-group-sm > .input-group-append > button {
  height: $form-control-height-sm;
  padding: $form-control-padding-y-sm $form-control-padding-x-sm;
  font-size: $font-size-sm;
  line-height: $form-control-line-height-sm;
  border-radius: $form-control-border-radius-sm;

  @extend :global(.form-control-sm) !optional;
}

// Prepend and append rounded corners
//
// These rulesets must come after the sizing ones to properly override sm and lg
// border-radius values when extending. They're more specific than we'd like
// with the `.input-group >` part, but without it, we cannot override the sizing.

.input-group > .input-group-prepend > button,
.input-group > .input-group-prepend > .input-group-text,
.input-group > .input-group-append:not(:last-child) > button,
.input-group > .input-group-append:not(:last-child) > .input-group-text,
.input-group > .input-group-append:last-child > button:not(:last-child):not(.dropdown-toggle),
.input-group > .input-group-append:last-child > .input-group-text:not(:last-child) {
  @include border-right-radius(0);
}

.input-group > .input-group-append > button,
.input-group > .input-group-append > .input-group-text,
.input-group > .input-group-prepend:not(:first-child) > button,
.input-group > .input-group-prepend:not(:first-child) > .input-group-text,
.input-group > .input-group-prepend:first-child > button:not(:first-child),
.input-group > .input-group-prepend:first-child > .input-group-text:not(:first-child) {
  @include border-left-radius(0);
}

///////////////////

// stylelint-disable selector-no-qualifying-type

.input-group > .input-group-middle > button,
.input-group > .input-group-middle > .input-group-text {
  border-left: 0;
  border-right: 0;
  border-radius: 0;
}

.input-group-middle {
  display: flex;
}
