{"version":3,"file":"static/css/20.674f3211.chunk.css","sources":["webpack:///formCheckbox_talentPortal.module.scss"],"sourcesContent":["$white: #fff !default;\n$gray-100: #f8f9fa !default;\n$gray-200: #e9ecef !default;\n$gray-300: #dee2e6 !default;\n$gray-400: #ced4da !default;\n$gray-500: #adb5bd !default;\n$gray-600: #868e96 !default;\n$gray-700: #495057 !default;\n$gray-800: #343a40 !default;\n$gray-900: #212529 !default;\n$black: #000 !default;\n\n$grays: () !default;\n$grays: map-merge(\n  (\n    '100': $gray-100,\n    '200': $gray-200,\n    '300': $gray-300,\n    '400': $gray-400,\n    '500': $gray-500,\n    '600': $gray-600,\n    '700': $gray-700,\n    '800': $gray-800,\n    '900': $gray-900\n  ),\n  $grays\n);\n\n// The yiq lightness value that determines when the lightness of color changes from \"dark\" to \"light\". Acceptable values are between 0 and 255.\n$yiq-contrasted-threshold: 150 !default;\n\n// Customize the light and dark text colors for use in our YIQ color contrast function.\n$yiq-text-dark: $gray-900 !default;\n$yiq-text-light: $white !default;\n\n$font-weight-thin: 100;\n$font-weight-extralight: 200;\n$font-weight-light: 300;\n$font-weight-regular: 400;\n$font-weight-medium: 500;\n$font-weight-semibold: 600;\n$font-weight-bold: 700;\n\n@mixin letterspacing($units) {\n  letter-spacing: ($units/1000 * 1rem);\n}\n\n// Easings\n$ease-in-out-circ: cubic-bezier(0.27, 0.01, 0.38, 1.06);\n$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);\n\n// Transitions\n$transition-duration: 250ms;\n$transition-base: all $transition-duration $ease-in-out-circ !default;\n$transition-fade: opacity 200ms ease-in-out !default;\n$transition-collapse: height 350ms ease-in-out !default;\n\n@mixin transition($transition...) {\n  @if length($transition) == 0 {\n    transition: $transition-base;\n  } @else {\n    transition: $transition;\n  }\n}\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next(\n  $name,\n  $breakpoints: $grid-breakpoints,\n  $breakpoint-names: map-keys($breakpoints)\n) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - 0.02px, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, '', '-#{$name}');\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n@mixin disabled-form-control {\n  cursor: not-allowed !important;\n  color: #c0c0c0;\n\n  * {\n    cursor: not-allowed !important;\n  }\n\n  label {\n    color: #c0c0c0;\n  }\n\n  input {\n    opacity: 0.5;\n  }\n}\n\n@mixin form-control-hint {\n  font-size: 1.4rem;\n  margin: 0.5rem;\n  color: $gray-500;\n}\n\n@function fluidCalc($minSize, $maxSize, $minViewport, $maxViewport) {\n  // without \"px\"\n  // refernce: https://www.madebymike.com.au/writing/fluid-type-calc-examples/\n  @return calc(\n    #{$minSize}px + (#{$maxSize} - #{$minSize}) * (100vw - #{$minViewport}px) /\n      (#{$maxViewport} - #{$minViewport})\n  );\n}\n\n// Color contrast\n@function color-yiq($color) {\n  $r: red($color);\n  $g: green($color);\n  $b: blue($color);\n\n  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;\n\n  @if ($yiq >= 150) {\n    @return darken($color, 65);\n  } @else {\n    @return #fff;\n  }\n}\n\n@mixin border-top-radius($radius) {\n  border-top-left-radius: $radius;\n  border-top-right-radius: $radius;\n}\n\n@mixin border-right-radius($radius) {\n  border-top-right-radius: $radius;\n  border-bottom-right-radius: $radius;\n}\n\n@mixin border-bottom-radius($radius) {\n  border-bottom-right-radius: $radius;\n  border-bottom-left-radius: $radius;\n}\n\n@mixin border-left-radius($radius) {\n  border-top-left-radius: $radius;\n  border-bottom-left-radius: $radius;\n}\n\n@mixin text-truncate() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n@mixin hover {\n  @include hover-no-touch {\n    &:hover {\n      @content;\n    }\n  }\n}\n\n@mixin hover-focus {\n  @include hover-no-touch {\n    &:hover,\n    &:focus {\n      @content;\n    }\n  }\n}\n\n@mixin hover-focus-active {\n  @include hover-no-touch {\n    &:hover,\n    &:focus,\n    &:active {\n      @content;\n    }\n  }\n}\n\n@mixin hover-not-disabled {\n  @include hover-no-touch {\n    &:not([disabled]):not(.disabled):hover {\n      @content;\n    }\n  }\n}\n\n@mixin hover-no-touch {\n  @media (hover: hover) {\n    @content;\n  }\n}\n\n@import '../../styles/themes/talentPortal/tokens';\n\n$form-checkbox-indicator-border-radius: 2px !default;\n$form-checkbox-indicator-transition: transform $transition-duration $ease-in-out-circ,\n  border $transition-duration $ease-in-out-circ !default;\n\n$custom-checkbox-indicator-indeterminate-bg: $component-active-bg !default;\n$custom-checkbox-indicator-indeterminate-color: $custom-control-indicator-checked-color !default;\n$custom-checkbox-indicator-icon-indeterminate: str-replace(\n  url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='#{$custom-checkbox-indicator-indeterminate-color}' d='M0 2h4'/%3E%3C/svg%3E\"),\n  '#',\n  '%23'\n) !default;\n$custom-checkbox-indicator-indeterminate-box-shadow: none !default;\n\n// Custom toggle\n$custom-toggle-width: 5rem !default;\n$custom-toggle-height: 2.8rem !default;\n$custom-toggle-border-width: 0.1rem !default;\n$custom-toggle-border: $custom-toggle-border-width solid $form-control-border-color !default;\n$custom-toggle-border-radius: 100px !default;\n\n$custom-toggle-focus-box-shadow: 0 0.5008rem 1.1504rem rgba($success, 0.1),\n  0 0.2496rem 0.2rem rgba($black, 0.06) !default;\n\n$custom-toggle-checked-background: $primary !default;\n$custom-toggle-checked-border-color: $custom-toggle-checked-background !default;\n$custom-toggle-checked-knob-background: $white !default;\n\n$custom-toggle-knob-width: 2rem !default;\n$custom-toggle-knob-height: 2rem !default;\n$custom-toggle-knob-border-radius: 10rem !default;\n$custom-toggle-knob-active-width: 2.6rem !default;\n\n$custom-toggle-width-sm: 3.5rem !default;\n$custom-toggle-height-sm: 1.8rem !default;\n$custom-toggle-knob-width-sm: 1.2rem !default;\n$custom-toggle-knob-active-width-sm: 1.6rem !default;\n$custom-toggle-knob-height-sm: 1.2rem !default;\n\n@mixin toggle-variant($parent, $color) {\n  #{$parent} {\n    label {\n      // Background\n      &::before {\n        background: $color;\n        border-color: $color;\n      }\n\n      // Knob\n      &::after {\n        background: color-yiq($color);\n      }\n    }\n  }\n}\n\n.checkbox-container {\n  :global {\n    .form-control-required,\n    .form-control-error {\n      margin: 0 0.8rem 0.8rem $custom-control-gutter;\n    }\n  }\n}\n\n.form-checkbox {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  min-height: (1rem * $line-height-base);\n  padding-left: $custom-control-gutter;\n\n  &:hover:not(.disabled) {\n    cursor: pointer;\n\n    label::before {\n      border-color: $form-control-hover-border-color;\n    }\n  }\n\n  input {\n    position: absolute;\n    z-index: -1; // Put the input behind the label so it doesn't overlay text\n    opacity: 0;\n    margin: 0;\n\n    &:checked ~ label {\n      &::before {\n        color: $custom-control-indicator-checked-color;\n        border-color: transparent;\n        background-color: $custom-control-indicator-checked-bg;\n        background-image: none;\n      }\n\n      &::after {\n        opacity: 1;\n        transform: rotate(45deg) scale(1);\n      }\n    }\n\n    &:focus ~ label::before {\n      box-shadow: $form-control-focus-box-shadow;\n    }\n\n    &:active ~ label::before {\n      color: $custom-control-indicator-active-color;\n      background-color: $custom-control-indicator-active-bg;\n      box-shadow: $custom-control-indicator-active-box-shadow;\n    }\n\n    &:disabled {\n      ~ label {\n        cursor: not-allowed;\n\n        &::before {\n          background-color: $form-control-disabled-bg;\n        }\n      }\n\n      ~ .description {\n        cursor: not-allowed;\n      }\n\n      &:checked ~ label {\n        &::before {\n          background: $form-control-disabled-bg;\n          border-color: $border-color;\n        }\n\n        &::after {\n          border-color: $border-color;\n        }\n      }\n    }\n\n    &:indeterminate ~ label {\n      &::before {\n        border: none;\n        background-color: $custom-checkbox-indicator-indeterminate-bg;\n        box-shadow: $custom-checkbox-indicator-indeterminate-box-shadow;\n      }\n\n      &::after {\n        content: '';\n        position: absolute;\n        transform: scale(1);\n        background-image: $custom-checkbox-indicator-icon-indeterminate;\n        background-color: $white;\n        border: none;\n        width: 10px;\n        height: 2px;\n        top: 11px;\n        left: 4px;\n        opacity: 1;\n        transition: none;\n      }\n    }\n  }\n\n  label {\n    position: static;\n    margin-bottom: 0;\n    cursor: pointer;\n\n    // Background-color and (when enabled) gradient\n    &::before {\n      box-sizing: border-box;\n      position: absolute;\n      display: block;\n      pointer-events: all;\n      content: '';\n      user-select: none;\n      top: (($line-height-base - $custom-control-indicator-size) / 2);\n      left: 0;\n      width: $custom-control-indicator-size;\n      height: $custom-control-indicator-size;\n      background-color: $form-control-bg;\n      border: $custom-control-indicator-border;\n      transition: all 250ms cubic-bezier(0.27, 0.01, 0.38, 1.06);\n      border-radius: $form-checkbox-indicator-border-radius;\n    }\n\n    // Foreground (icon)\n    &::after {\n      box-sizing: border-box;\n      position: absolute;\n      display: block;\n      content: '';\n      background-repeat: no-repeat;\n      background-position: center center;\n\n      content: '';\n      top: 5px;\n      left: 7px;\n      width: 5px;\n      height: 11px;\n      opacity: 0;\n      transform: rotate(45deg) scale(0);\n      border-right: 2px solid $white;\n      border-bottom: 2px solid $white;\n      transition: $form-checkbox-indicator-transition;\n      transition-delay: 100ms;\n    }\n  }\n}\n\n.inline {\n  display: inline-block;\n  margin-right: $custom-control-spacer-x;\n}\n\n.left-label {\n  margin-right: 1rem;\n}\n\n.as-toggle {\n  display: flex;\n  align-items: center;\n\n  @each $color, $value in $grays {\n    @include toggle-variant('&.left-#{$color}', $value);\n  }\n  @each $color, $value in $colors {\n    @include toggle-variant('&.left-#{$color}', $value);\n  }\n  @each $color, $value in $theme-colors {\n    @include toggle-variant('&.left-#{$color}', $value);\n  }\n\n  > label {\n    position: relative;\n    padding-left: ($custom-toggle-width + 1rem);\n    min-height: $custom-toggle-height;\n\n    &.smaller {\n      padding-left: 4.2rem;\n\n      label {\n        // Background\n        &::before {\n          top: 0.3rem;\n          position: absolute;\n          display: block;\n          width: $custom-toggle-width-sm;\n          height: $custom-toggle-height-sm;\n          background: $form-control-bg;\n          border-radius: $custom-toggle-border-radius;\n          border: $custom-toggle-border;\n        }\n\n        // Knob\n        &::after {\n          content: '';\n          position: absolute;\n          top: 0.6rem;\n          left: 0.3rem;\n          width: $custom-toggle-knob-width-sm;\n          height: $custom-toggle-knob-height-sm;\n        }\n      }\n\n      // Checked state\n      input:checked ~ label {\n        // Knob\n        &::after {\n          left: $custom-toggle-width-sm - $custom-toggle-border-width - 0.3rem;\n        }\n      }\n\n      // Active state\n      input:active:not(:disabled) ~ label {\n        // Knob\n        &::after {\n          width: $custom-toggle-knob-active-width-sm;\n        }\n      }\n    }\n\n    & ~ :global(.form-control-descenders) {\n      .form-control-required,\n      .form-control-error {\n        margin-left: ($custom-toggle-width + 1rem);\n      }\n    }\n\n    label {\n      // Background\n      &::before {\n        position: absolute;\n        top: 0;\n        left: 0;\n        display: block;\n        width: $custom-toggle-width;\n        height: $custom-toggle-height;\n        background: $form-control-bg;\n        border-radius: $custom-toggle-border-radius;\n        border: $custom-toggle-border;\n      }\n\n      // Knob\n      &::after {\n        content: '';\n        position: absolute;\n        top: 0.4rem;\n        left: 0.4rem;\n        width: $custom-toggle-knob-width;\n        height: $custom-toggle-knob-height;\n        background: $form-control-border-color;\n        border-radius: $custom-toggle-knob-border-radius;\n        transition: 350ms;\n        opacity: 1;\n        transform: none;\n        border: none;\n      }\n    }\n  }\n\n  input {\n    // Checked state\n    &:checked ~ label {\n      // Background\n      &::before {\n        background: $custom-toggle-checked-background;\n        border-color: $custom-toggle-checked-border-color;\n      }\n\n      // Knob\n      &::after {\n        left: $custom-toggle-width - $custom-toggle-border-width - 0.3rem;\n        transform: translateX(-100%);\n        background: $custom-toggle-checked-knob-background;\n      }\n    }\n\n    // Disabled and checked state\n    &:checked:disabled ~ label {\n      &::before {\n        background: $form-control-disabled-bg;\n        border-color: $border-color;\n      }\n\n      &::after {\n        background: $border-color;\n      }\n    }\n\n    // Active state\n    &:active:not(:disabled) ~ label {\n      // Knob\n      &::after {\n        width: $custom-toggle-knob-active-width;\n      }\n    }\n\n    // Active, but not checked.\n    &:active:not(:checked) ~ label {\n      &::before {\n        background-color: $form-control-bg;\n      }\n    }\n\n    // Disabled and active.\n    &:disabled:active ~ label {\n      &::before {\n        background-color: $form-control-disabled-bg;\n      }\n    }\n\n    // Focus state\n    &:focus {\n      & ~ label {\n        &::before {\n          box-shadow: $custom-toggle-focus-box-shadow;\n        }\n      }\n\n      &:not(:checked) ~ label {\n        &::before {\n          box-shadow: $form-control-focus-box-shadow;\n        }\n      }\n    }\n  }\n}\n\n@include form-validation-state('valid', $success);\n@include form-validation-state('invalid', $danger);\n"],"mappings":"AA4WA;;","sourceRoot":""}